#pragma checksum "D:\KSD-LEARNING\C#\DOTNET_CORE\KSD-SCHOOL-SYSTEM\KSD-SCHOOL-SYSTEM\Views\Level\ViewLevel.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7d7502a12f63b59244011df44f8479bcf605629f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Level_ViewLevel), @"mvc.1.0.view", @"/Views/Level/ViewLevel.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\KSD-LEARNING\C#\DOTNET_CORE\KSD-SCHOOL-SYSTEM\KSD-SCHOOL-SYSTEM\Views\_ViewImports.cshtml"
using KSD_SCHOOL_SYSTEM;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\KSD-LEARNING\C#\DOTNET_CORE\KSD-SCHOOL-SYSTEM\KSD-SCHOOL-SYSTEM\Views\_ViewImports.cshtml"
using KSD_SCHOOL_SYSTEM.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7d7502a12f63b59244011df44f8479bcf605629f", @"/Views/Level/ViewLevel.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"32f79689ee582436c9ac7483db55e1047df40b94", @"/Views/_ViewImports.cshtml")]
    public class Views_Level_ViewLevel : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "I", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "A", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("need-novalidate-new"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("need-novalidate-Update"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\KSD-LEARNING\C#\DOTNET_CORE\KSD-SCHOOL-SYSTEM\KSD-SCHOOL-SYSTEM\Views\Level\ViewLevel.cshtml"
  
    ViewData["Title"] = "ViewLevel";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<script src=""https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js""></script>
<script src=""https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap4.min.js""></script>
<link href="" https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap4.min.css"" rel=""stylesheet"">
<style>
    .select {
        background-color: #68B6DE;
    }

    .table-responsive {
        white-space: nowrap;
        overflow-x: auto;
    }
</style>
<div class=""container"">
    <div class=""row"">
        <div class=""col-sm-12"">
            <h5><i class=""fas fa-home""></i>Home <i class=""fas fa-arrow-right""></i> User <i class=""fas fa-arrow-right""></i> View Level</h5>
        </div>
    </div>
    <br />
    <div class=""table-responsive"">
        <div class=""row"">
            <div class=""col-sm-12"">
                <table id=""idTableLevel"" class=""table  table-bordered table-hover"" style=""width:100%;"">
                    <thead style="" background-color:#FBC576"">
                        <tr>
                  ");
            WriteLiteral(@"          <th>No</th>
                            <th>Level Code</th>
                            <th>Level Name</th>
                            <th>Unit Price</th>
                            <th>Status</th>
                            <th>Command</th>
                        </tr>
                    </thead>
                    <tfoot style="" background-color:#FBC576"">
                        <tr>
                            <th>No</th>
                            <th>Level Code</th>
                            <th>Level Name</th>
                            <th>Unit Price</th>
                            <th>Status</th>
                            <th>Command</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    <hr />
    <div class=""row"">
        <div class=""col-sm-12"">
            <button class=""btn btn-outline-info"" data-target=""#idFormLevel"" data-toggle=""modal"">Add new</button>
        </div");
            WriteLiteral(">\r\n    </div>\r\n</div>\r\n");
            WriteLiteral(@"<div class=""modal fade"" id=""idFormLevel"" tabindex=""-1"" role=""dialog"" data-backdrop=""static"">
    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"">Create Level</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d7502a12f63b59244011df44f8479bcf605629f7732", async() => {
                WriteLiteral(@"
                    <div class=""row"">
                        <div class=""col-sm-6"">
                            Level Code
                            <input id=""txtLevelCode"" type=""text"" class=""form-control"" required />
                            <div class=""invalid-feedback"">please input level code</div>
                            Level Name
                            <input id=""txtLevelName"" type=""text"" class=""form-control"" required />
                            <div class=""invalid-feedback"">please input level name</div>
                        </div>
                        <div class=""col-sm-6"">
                            Unit Price
                            <input id=""txtUnitPrice"" type=""text"" class=""form-control"" required />
                            <div class=""invalid-feedback"">please input unit price</div>
                            Status
                            <select class=""form-control"" id=""ddlStatus"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d7502a12f63b59244011df44f8479bcf605629f9016", async() => {
                    WriteLiteral("Inactive");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d7502a12f63b59244011df44f8479bcf605629f10273", async() => {
                    WriteLiteral("Active");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            </select>
                            <div class=""invalid-feedback"">please select status</div>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""submit"" class=""btn btn-primary"">Save</button>
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                    </div>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            WriteLiteral("\r\n");
            WriteLiteral(@"<div class=""modal fade"" id=""idFormLevelUpdate"" tabindex=""-1"" role=""dialog"" data-backdrop=""static"">
    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"">Update Level</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d7502a12f63b59244011df44f8479bcf605629f14385", async() => {
                WriteLiteral(@"
                    <div class=""row"">
                        <div class=""col-sm-6"">
                            Level Code
                            <input id=""utxtLevelCode"" type=""text"" class=""form-control"" readonly />
                            <div class=""invalid-feedback"">please input level code</div>
                            Level Name
                            <input id=""utxtLevelName"" type=""text"" class=""form-control"" required />
                            <div class=""invalid-feedback"">please input level name</div>
                        </div>
                        <div class=""col-sm-6"">
                            Unit Price
                            <input id=""utxtUnitPrice"" type=""text"" class=""form-control"" required />
                            <div class=""invalid-feedback"">please input unit price</div>
                            Status
                            <select class=""form-control"" id=""uddlStatus"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d7502a12f63b59244011df44f8479bcf605629f15674", async() => {
                    WriteLiteral("Inactive");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d7502a12f63b59244011df44f8479bcf605629f16932", async() => {
                    WriteLiteral("Active");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            </select>
                            <div class=""invalid-feedback"">please select status</div>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""submit"" class=""btn btn-primary"">Save</button>
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                    </div>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            WriteLiteral("\r\n");
            WriteLiteral(@"<div class=""modal"" id=""idLoading"" tabindex=""-1"" role=""dialog"">
    <div class=""modal-dialog modal-dialog-centered modal-sm vh-100"" role=""document"">
        <div class=""modal-content"">
            <div class=""d-flex justify-content-center"">
                <div class=""spinner-border"" role=""status"">
                    <span class=""sr-only"">Loading...</span>
                </div>
            </div>
        </div>
    </div>
</div>
");
            WriteLiteral("\r\n");
            WriteLiteral(@"<div class=""modal"" id=""idLoadingError"" tabindex=""-1"" role=""dialog"">
    <div class=""modal-dialog modal-dialog-centered modal-sm vh-100"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"">Message</h5>
            </div>
            <div class=""modal-body"">
                <div id=""msg""></div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"">Close</button>
            </div>
        </div>
    </div>
</div>
");
            WriteLiteral("\r\n");
            WriteLiteral(@"<div class=""modal"" id=""idLoadingSucess"" tabindex=""-1"" role=""dialog"">
    <div class=""modal-dialog modal-dialog-centered modal-sm vh-100"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"">Message</h5>
            </div>
            <div class=""modal-body"">
                <div id=""msgSuccess""></div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"">Close</button>
            </div>
        </div>
    </div>
</div>
");
            WriteLiteral(@"
<script type=""text/javascript"">
    //------------------------------------------------------for call datatable--------------------------------------------------------
    // Call the DataTable default not have data
    // $('#idTableLevel').DataTable();

    var levels = [];
    $('#idTableLevel').DataTable({
        data: levels,
        columns: [
            { // Add a column for auto-increment ID
                render: function (data, type, full, meta) {
                    return meta.row + 1;
                }
            },
            { data: ""levelCode"" },
            { data: ""levelName"" },
            { data: ""unitPrice"" },
            { data: ""status"" },
            {
                render: function (data, type, full, meta) {
                    return '<a href=""#"" onclick=""remove(' + full.docEntry + ')""><i class=""fas fa-trash""></i></a>'
                }
            }
        ]
    });


    var table = $('#idTableLevel').DataTable();
  

    function getData() {");
            WriteLiteral("\n        $.ajax({\r\n            url: \'");
#nullable restore
#line 230 "D:\KSD-LEARNING\C#\DOTNET_CORE\KSD-SCHOOL-SYSTEM\KSD-SCHOOL-SYSTEM\Views\Level\ViewLevel.cshtml"
             Write(Url.Action("GetAllLevel","Level"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""GET"",
            dataType: ""JSON"",
            success: function (data) {
                if (data.errCode == 0) {
                    levels = data.level; // Update the levels array with the received data

                    table.clear();
                    table.rows.add(levels);
                    table.draw();
                } else {
                    // Handle the error case if needed
                }
            }
        });
    }
    //------------------------------------------------------for call datatable--------------------------------------------------------

    //call function getData
    getData();

    // Hold screen to validation
    var form = document.getElementsByClassName('need-novalidate-new');
    var validation = Array.prototype.filter.call(form, function (forms) {
        forms.addEventListener('submit', function (event) {
            if (forms.checkValidity() == false) {
                event.preventDefault();
            }
 ");
            WriteLiteral(@"           else {
                event.preventDefault();
                var obj = {};
                obj.LevelCode = $('#txtLevelCode').val()
                obj.LevelName = $('#txtLevelName').val()
                obj.UnitPrice = $('#txtUnitPrice').val()
                obj.Status = $('#ddlStatus').val()

                $('#idFormLevel').modal('hide');
                $('#idLoading').modal('show');

                $.ajax({
                    url: '");
#nullable restore
#line 270 "D:\KSD-LEARNING\C#\DOTNET_CORE\KSD-SCHOOL-SYSTEM\KSD-SCHOOL-SYSTEM\Views\Level\ViewLevel.cshtml"
                     Write(Url.Action("CreateLevel","Level"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    type: ""POST"",
                    dataType: ""JSON"",
                    data: { level: obj },
                    success: function (data) {
                        if (data.errCode == 0) {
                            setTimeout(function () {
                                $('#idLoading').modal('hide');

                            }, 2000);// Delay modal

                            setTimeout(function () {

                                $('#idLoadingSucess').modal('show');
                                $('#msgSuccess').text(data.errMsg);
                                getData();
                            }, 2020);// Delay message
                        }
                        else {
                            setTimeout(function () {
                                $('#idLoading').modal('hide');
                            }, 2000);// Delay modal

                            setTimeout(function () {
                                $('#idLoadingError");
            WriteLiteral(@"').modal('show');
                                $('#msg').text(data.errMsg);
                            }, 2020);// Delay message
                        }
                    }
                })



            }
            forms.classList.add('was-validated');
        }, false);
    });


    //-----------------------------------------------------Function Remove-----------------------------------------------------
    function remove(ID) {
        if (confirm(""Do you want to delete? "") == true) {
            $.ajax({
                url: '");
#nullable restore
#line 313 "D:\KSD-LEARNING\C#\DOTNET_CORE\KSD-SCHOOL-SYSTEM\KSD-SCHOOL-SYSTEM\Views\Level\ViewLevel.cshtml"
                 Write(Url.Action("DeleteLevel","Level"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                type: ""GET"",
                dataType: ""JSON"",
                data: { docEntry: ID },
                success: function (data) {
                    if (data.errCode == 0) {
                        $('#idLoadingSucess').modal('show');
                        $('#msgSuccess').text(data.errMsg);
                        getData();
                    }
                    else {
                        $('#idLoadingError').modal('show');
                        //alert(data.errMsg);
                        $('#msg').text(data.errMsg);
                    }
                }
            })
        }


    }
    //-----------------------------------------------------Function Remove-----------------------------------------------------





    //-----------------------------------------------------Function Update-----------------------------------------------------
    //i use double click to show update form
    $('#idTableLevel tbody').on('dblclick', 'tr', function");
            WriteLiteral(@" () {
        //use for select row on datatable
        if ($(this).hasClass('select')) {

            $(this).removeClass('select');
        } else {
            table.$('tr.select').removeClass('select');
            $(this).addClass('select');

        }

        var index = table.row('.select').index()
        var data = table.row(index).data();

        //Get Data From Table For Update
        $('#utxtLevelCode').val(data.levelCode);
        $('#utxtLevelName').val(data.levelName);
        $('#utxtUnitPrice').val(data.unitPrice);
        if (data.status == ""Active"") {
            $('#uddlStatus').val('A')
        }
        else {
            $('#uddlStatus').val('I')
        }

        //For Show Form Update
        $('#idFormLevelUpdate').modal('show');
    })




    // Hold screen to validation
    var form = document.getElementsByClassName('need-novalidate-Update');
    var validation = Array.prototype.filter.call(form, function (forms) {
        forms.addEventListe");
            WriteLiteral(@"ner('submit', function (event) {
            if (forms.checkValidity() == false) {
                event.preventDefault();
            }
            else {
                event.preventDefault();

                var obj = {};
                obj.LevelCode = $('#utxtLevelCode').val();
                obj.LevelName = $('#utxtLevelName').val();
                obj.UnitPrice = $('#utxtUnitPrice').val();
                obj.Status = $('#uddlStatus').val();


                $('#idFormLevelUpdate').modal('hide');
                $('#idLoading').modal('show');

                $.ajax({
                    url: '");
#nullable restore
#line 395 "D:\KSD-LEARNING\C#\DOTNET_CORE\KSD-SCHOOL-SYSTEM\KSD-SCHOOL-SYSTEM\Views\Level\ViewLevel.cshtml"
                     Write(Url.Action("UpdateLevel","Level"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    type: ""POST"",
                    dataType: ""JSON"",//OK
                    data: { level: obj },
                    success: function (data) {
                        if (data.errCode == 0) {

                            setTimeout(function () {
                                $('#idLoading').modal('hide');

                            }, 2000);// Delay modal

                            setTimeout(function () {
                                //alert(data.errMsg);
                                $('#idLoadingSucess').modal('show');
                                $('#msgSuccess').text(data.errMsg);
                                $('#idFormLevelUpdate').modal('hide');
                                getData();
                            }, 2020);// Delay message


                        } else {
                            setTimeout(function () {
                                $('#idLoading').modal('hide');
                            }, 2000);// Delay mod");
            WriteLiteral(@"al

                            setTimeout(function () {
                                $('#idLoadingError').modal('show');
                                //alert(data.errMsg);
                                $('#msg').text(data.errMsg);
                            }, 2020);// Delay message
                        }
                    },

                });






            }
            forms.classList.add('was-validated');
        }, false);
    });


       //-----------------------------------------------------Function Update-----------------------------------------------------


</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
